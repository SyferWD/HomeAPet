// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generates an ER diagram
// generator erd {
//   provider = "prisma-erd-generator"
//   output = "../ERD.png"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    Int      @id @default(autoincrement())
  username   String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  pets       Pet[]   
}

model Pet {
  pet_id            Int      @id @default(autoincrement())
  name              String
  species           String
  breed             String
  color             String
  age               String
  gender            String
  description       String
  medical_condition String
  petURL            String
  user_id           Int
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now()) @updatedAt 
  applications      AdoptionApplication[]
  characteristics   Characteristics[] 
  owner             User     @relation(fields: [user_id], references: [user_id])
}

model Characteristics {
  characteristic_id   Int      @id @default(autoincrement())
  pet_id              Int
  children_friendly   Boolean         
  house_trained       Boolean         
  live_with_pets      Boolean         
  good_with_commands  Boolean         
  separation_anxiety  Boolean         
  knows_tricks        Boolean         
  indoor_preference   Boolean         
  vaccinated          Boolean         
  toilet_trained      Boolean         
  pets                Pet    @relation(fields: [pet_id], references: [pet_id], onDelete: Cascade)
}

model AdoptionApplication {
  application_id      Int      @id @default(autoincrement())
  applicant_name      String
  applicant_email     String
  applicant_phone     String
  pet_id              Int
  application_status  String   
  created_at          DateTime @default(now())
  updated_at          DateTime @default(now()) @updatedAt
  pet                 Pet      @relation(fields: [pet_id], references: [pet_id])
}

model Volunteer {
  volunteer_id Int      @id @default(autoincrement())
  name         String
  email        String
  phone        String
  interests    String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}